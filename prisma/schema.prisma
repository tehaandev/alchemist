generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions")]
}

model User {
  id          String        @id @default(cuid())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ChatSession ChatSession[]
  Document    Document[]
}

model Document {
  id         Int            @id @default(autoincrement())
  key        String         @unique
  filename   String
  status     DocumentStatus @default(UPLOADED)
  metadata   Json?
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  uploadedBy String
  User       User           @relation(fields: [uploadedBy], references: [id], onDelete: Cascade)

  @@index([status])
  @@index([uploadedBy, status])
  @@index([createdAt])
}

model ChatSession {
  id        String    @id @default(cuid())
  createdBy String
  title     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User      @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  messages  Message[]

  @@index([id])
}

model Message {
  id          String      @id @default(cuid())
  sessionId   String
  role        MessageRole
  content     String
  createdAt   DateTime    @default(now())
  embeddingId String?
  session     ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([id])
  @@index([embeddingId])
  @@index([role])
  @@index([createdAt])
}

enum DocumentStatus {
  UPLOADED
  PROCESSING
  EMBEDDED
  FAILED
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}
